name: Docker Image CI client app

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: "45 5 * * *"
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  CLIENT_NAME: client
  API_NAME: server

jobs:
  # Job 1: Preparar entorno y metadatos (común para todos)
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      image_name: ${{ steps.prepare.outputs.image_name }}
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Prepare image name (lowercase)
        id: prepare
        run: echo "::set-output name=image_name::$(echo '${{ env.IMAGE_NAME }}' | awk '{print tolower($0)}')"
  # Job 2: Build y push de la imagen del cliente
  build-client:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ needs.setup.outputs.tags }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/client:latest
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/client:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/client:${{ github.ref_name }}
          labels: |
            ${{ needs.setup.outputs.tags }}
  # Job 3: Build y push de la imagen del servidor
  build-server:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ needs.setup.outputs.tags }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/server:latest
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/server:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ needs.setup.outputs.image_name }}/server:${{ github.ref_name }}
          labels: |
            ${{ needs.setup.outputs.tags }}
  # Job 4: Firma de imágenes
  sign-images:
    needs: [build-client, build-server]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Sign client image
        env:
          TAGS: ${{ needs.build-client.outputs.tags }}
          DIGEST: ${{ steps.build-client.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign server image
        env:
          TAGS: ${{ needs.build-server.outputs.tags }}
          DIGEST: ${{ steps.build-server.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
